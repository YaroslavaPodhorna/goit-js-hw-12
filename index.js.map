{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["\n\nconst BASE_URL = 'https://pixabay.com/api/';\nconst API_KEY = '48208907-81157ac097d3685843fe42362';\n\n\n/**\n * Функція для виконання запитів до Pixabay API\n * @param {string} query - Пошуковий запит\n * @param {number} page - Номер сторінки\n * @param {number} perPage - Кількість зображень на сторінку\n * @returns {Promise} - Результати пошуку\n */\nexport async function fetchImages(query, page = 1, perPage = 12) {\n  const url = `${BASE_URL}?key=${API_KEY}&q=${encodeURIComponent(query)}&image_type=photo&orientation=horizontal&safesearch=true&page=${page}&per_page=${perPage}`;\n  const response = await fetch(url);\n\n  if (!response.ok) {\n    throw new Error('Failed to fetch images');\n  }\n\n  return response.json();\n}\n\n// export function fetchImages(query) {\n//     const url = `${BASE_URL}?key=${API_KEY}&q=${encodeURIComponent(query)}&image_type=photo&orientation=horizontal&safesearch=true`;\n\n//     return fetch(url)\n//         .then(response => {\n//             if (!response.ok) {\n//                 throw new Error('Failed to fetch data');\n//             }\n//             return response.json();\n//         })\n//         .catch(error => {\n//             console.error('Error fetching images:', error);\n//             throw error;\n//         });\n// }","\n\n  export function renderGallery(images) {\n    return images\n      .map(\n        ({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) => `\n          <a class=\"gallery-item\" href=\"${largeImageURL}\" data-title=\"${tags}\">\n            <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\"/>\n            <div class=\"info\">\n              <p><span>Likes</span><span>${likes}</span></p>\n              <p><span>Views</span><span>${views}</span></p>\n              <p><span>Comments</span><span>${comments}</span></p>\n              <p><span>Downloads</span><span>${downloads}</span></p>\n            </div>\n          </a>`\n      )\n      .join('');\n  }","import { fetchImages } from './js/pixabay-api';\nimport { renderGallery } from './js/render-functions';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport axios from 'axios';\n\n\n// DOM element \nconst form = document.querySelector('#search-form');\nconst gallery = document.querySelector('.gallery');\nconst loader = document.querySelector('.loader');\n\n\n\n\nlet lightbox = new SimpleLightbox('.gallery a');\nlet query = '';\nlet page = 1;\n\n// clear\nfunction clearGallery() {\n  gallery.innerHTML = '';\n}\n\n// Loader\nfunction toggleLoader(show) {\n  loader.style.display = show ? 'block' : 'none';\n}\n\n// Submit\nform.addEventListener('submit', async (e) => {\n  e.preventDefault();\n  query = e.target.elements.searchQuery.value.trim();\n  if (!query) {\n    iziToast.warning({\n      title: 'Warning',\n      message: 'Enter a search term!',\n      position: \"topRight\",\n        timeout: 3000,\n    });\n    return;\n  }\n\n  page = 1;\n  clearGallery();\n  toggleLoader(true);\n\n  try {\n    const { hits, totalHits } = await fetchImages(query, page);\n    toggleLoader(false);\n\n    if (hits.length === 0) {\n      iziToast.info({\n        title: 'Info',\n        message: 'Sorry, there are no images matching your search query. Please try again!',\n         position: \"topRight\",\n        timeout: 3000,\n        class: 'custom-toast',\n    \n      });\n      return;\n    }\n\n    gallery.insertAdjacentHTML('beforeend', renderGallery(hits));\n    lightbox.refresh();\n    iziToast.success({\n      title: 'Success',\n      message: `Found ${totalHits} images!`,\n      position: \"topRight\",\n        timeout: 3000,\n    });\n  } catch (error) {\n    toggleLoader(false);\n    iziToast.error({\n      title: 'Error',\n      message: 'Something went wrong!',\n      position: \"topRight\",\n      timeout: 3000,\n    });\n  }\n});"],"names":["BASE_URL","API_KEY","fetchImages","query","page","perPage","url","response","renderGallery","images","webformatURL","largeImageURL","tags","likes","views","comments","downloads","form","gallery","loader","lightbox","SimpleLightbox","clearGallery","toggleLoader","show","e","iziToast","hits","totalHits"],"mappings":"wvBAEA,MAAMA,EAAW,2BACXC,EAAU,qCAUT,eAAeC,EAAYC,EAAOC,EAAO,EAAGC,EAAU,GAAI,CAC/D,MAAMC,EAAM,GAAGN,CAAQ,QAAQC,CAAO,MAAM,mBAAmBE,CAAK,CAAC,iEAAiEC,CAAI,aAAaC,CAAO,GACxJE,EAAW,MAAM,MAAMD,CAAG,EAEhC,GAAI,CAACC,EAAS,GACZ,MAAM,IAAI,MAAM,wBAAwB,EAG1C,OAAOA,EAAS,MAClB,CCpBS,SAASC,EAAcC,EAAQ,CACpC,OAAOA,EACJ,IACC,CAAC,CAAE,aAAAC,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAS,IAAO;AAAA,0CAC5CL,CAAa,iBAAiBC,CAAI;AAAA,wBACpDF,CAAY,UAAUE,CAAI;AAAA;AAAA,2CAEPC,CAAK;AAAA,2CACLC,CAAK;AAAA,8CACFC,CAAQ;AAAA,+CACPC,CAAS;AAAA;AAAA,eAGjD,EACA,KAAK,EAAE,CACd,CCPA,MAAMC,EAAO,SAAS,cAAc,cAAc,EAC5CC,EAAU,SAAS,cAAc,UAAU,EAC3CC,EAAS,SAAS,cAAc,SAAS,EAK/C,IAAIC,EAAW,IAAIC,EAAe,YAAY,EAC1ClB,EAAQ,GACRC,EAAO,EAGX,SAASkB,GAAe,CACtBJ,EAAQ,UAAY,EACtB,CAGA,SAASK,EAAaC,EAAM,CAC1BL,EAAO,MAAM,QAAUK,EAAO,QAAU,MAC1C,CAGAP,EAAK,iBAAiB,SAAU,MAAOQ,GAAM,CAG3C,GAFAA,EAAE,eAAc,EAChBtB,EAAQsB,EAAE,OAAO,SAAS,YAAY,MAAM,OACxC,CAACtB,EAAO,CACVuB,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,uBACT,SAAU,WACR,QAAS,GACjB,CAAK,EACD,MACD,CAEDtB,EAAO,EACPkB,IACAC,EAAa,EAAI,EAEjB,GAAI,CACF,KAAM,CAAE,KAAAI,EAAM,UAAAC,CAAW,EAAG,MAAM1B,EAAYC,EAAOC,CAAI,EAGzD,GAFAmB,EAAa,EAAK,EAEdI,EAAK,SAAW,EAAG,CACrBD,EAAS,KAAK,CACZ,MAAO,OACP,QAAS,2EACR,SAAU,WACX,QAAS,IACT,MAAO,cAEf,CAAO,EACD,MACD,CAEDR,EAAQ,mBAAmB,YAAaV,EAAcmB,CAAI,CAAC,EAC3DP,EAAS,QAAO,EAChBM,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,SAASE,CAAS,WAC3B,SAAU,WACR,QAAS,GACjB,CAAK,CACF,MAAe,CACdL,EAAa,EAAK,EAClBG,EAAS,MAAM,CACb,MAAO,QACP,QAAS,wBACT,SAAU,WACV,QAAS,GACf,CAAK,CACF,CACH,CAAC"}